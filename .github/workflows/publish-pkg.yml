# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Publish

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - main

concurrency:
  group: build-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  pure-python-wheel:
    name: Build a pure Python wheel
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          # Fetch all tags
          fetch-depth: 0

      - name: Setup pip with version constraint
        uses: ./.github/actions/setup-pip

      - name: Install pipx
        run: python -m pip install -q pipx

      - name: Install Hatch & pre-commit
        run: |
          pip install --upgrade hatch hatch-vcs pre-commit
          pip list

      - name: Build distributions
        run: hatch build

      - uses: actions/upload-artifact@v5
        with:
          name: artifacts
          path: dist/*
          if-no-files-found: error

  publish:
    name: Publish on PyPI
    needs:
      - pure-python-wheel
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: dist

      - name: Push artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
